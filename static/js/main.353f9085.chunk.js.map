{"version":3,"sources":["redux/constants/actionTypes.js","api/http-common.js","api/index.js","components/weatherLogic/wetherEngine/carditem/IconWeather.js","components/weatherLogic/wetherEngine/carditem/CardTemperature.js","components/weatherLogic/wetherEngine/carditem/LocationMap.js","components/weatherLogic/wetherEngine/WeatherCard.js","components/weatherLogic/WetherEngine.js","redux/actions/weather.js","components/countries/countriesArray.js","img/maxresdefault.jpg","components/SelectCountry.js","redux/actions/countries.js","components/theme/Theme.js","App.js","redux/reduers/weather.js","redux/reduers/countries.js","redux/reduers/rootReducer.js","redux/store/store.js","index.js"],"names":["FETCH_WEATHERAPI_REQUEST","FETCH_WEATHERAPI_SUCCESS","FETCH_WEATHERAPI_FAILURE","GET_COUNTRY","axios","create","baseURL","headers","city","http","get","process","IconWeather","props","icon","condition","src","alt","useStyles","makeStyles","theme","root","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","avatar","backgroundColor","red","contexClass","textAlign","fontSize","imageClasses","margin","contexClassDescription","cardContentClass","position","CardTemperature","temp","pressure","description","sunrise","sunset","wind","feelslike","classes","Card","className","CardHeader","Avatar","aria-label","title","moment","format","subheader","CardContent","style","background","highColor","lowColor","Math","ceil","weatherConditions","color","Typography","variant","component","toUpperCase","CardActions","disableSpacing","AnyReactComponent","text","LocationMap","state","center","lat","lng","this","setState","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","Component","weatherClass","weatherClassText","textShadow","WeatherCard","item","Grid","sm","name","sys","country","Box","m","main","weather","speed","feels_like","coord","lon","wrongCityName","marginTop","forWetherEngine","border","WetherEngine","wether","useSelector","dispatch","useDispatch","useEffect","a","type","WeatherAPI","fetchAPI","data","payload","error","getWeather","xs","container","justify","loading","countriesArray","id","img","cities","button","display","spacing","formControl","minWidth","imageWeather","imageWeatherContainer","marginForCityNameInput","formCountry","marginBottom","itemCountryClass","linkClass","overflow","SelectCountry","selectCities","useState","countryId","setCountryId","setCity","open","setOpen","openCity","setOpenCity","getCountry","handleCity","e","prevState","target","value","Link","href","backgroundImage","weatherPics","FormControl","InputLabel","Select","labelId","onClose","onOpen","onChange","map","MenuItem","index","TextField","label","length","theme1","createMuiTheme","palette","theme2","Theme","children","defaultTheme","darkMode","ThemeProvider","withTheme","setDarkMode","CssBaseline","Container","maxWidth","initialState","items","rootReducer","combineReducers","action","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.353f9085.chunk.js","sourcesContent":["export const FETCH_WEATHERAPI_REQUEST = 'FETCH_WEATHERAPI_REQUEST';\r\nexport const FETCH_WEATHERAPI_SUCCESS = 'FETCH_WEATHERAPI_SUCCESS';\r\nexport const FETCH_WEATHERAPI_FAILURE = 'FETCH_WEATHERAPI_FAILURE';\r\n\r\nexport const GET_COUNTRY = 'GET_COUNTRY';\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n\tbaseURL: 'https://api.openweathermap.org/data/2.5/weather',\r\n\theaders: {\r\n\t\t'Content-type': 'application/json',\r\n\t},\r\n});\r\n","import http from './http-common';\r\n\r\nconst apiId = process.env.REACT_APP_API_KEY;\r\n\r\nclass WeatherAPI {\r\n\tfetchAPI(city) {\r\n\t\treturn http.get(`/?uk&units=metric&appid=${apiId}&q=${city}`);\r\n\t}\r\n}\r\n\r\nexport default new WeatherAPI();\r\n","import React from 'react';\r\n\r\nconst IconWeather = (props) => {\r\n\tlet icon = '';\r\n\tswitch (props.condition) {\r\n\t\tcase 'Clouds':\r\n\t\t\ticon = `./image/Mostly Cloudy-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Clear':\r\n\t\t\ticon = `./image/Mostly Sunny-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Haze':\r\n\t\t\ticon = `./image/Haze-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Hail':\r\n\t\t\ticon = `./image/Hail-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Fog':\r\n\t\t\ticon = `./image/Fog-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Tornado':\r\n\t\t\ticon = `./image/Tornado-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Dust':\r\n\t\t\ticon = `./image/Dust-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Mist':\r\n\t\t\ticon = `./image/Fog-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Snow':\r\n\t\t\ticon = `./image/Snow-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Rain':\r\n\t\t\ticon = `./image/Rain-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Drizzle':\r\n\t\t\ticon = `./image/Drizzle-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Thunderstorm':\r\n\t\t\ticon = `./image/Severe Thunderstorm-2x.png`;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\ticon = `./image/Fog-2x.png`;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img src={icon} alt='weather condition' />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default IconWeather;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport {\r\n\tCard,\r\n\tCardHeader,\r\n\tTypography,\r\n\tAvatar,\r\n\tCardContent,\r\n\tCardActions,\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport IconWeather from './IconWeather';\r\n// import VanilaEffect from '../vanilaEffect/VanilaEffect';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {},\r\n\tmedia: {\r\n\t\theight: 0,\r\n\t\tpaddingTop: '56.25%', // 16:9\r\n\t},\r\n\texpand: {\r\n\t\ttransform: 'rotate(0deg)',\r\n\t\tmarginLeft: 'auto',\r\n\t\ttransition: theme.transitions.create('transform', {\r\n\t\t\tduration: theme.transitions.duration.shortest,\r\n\t\t}),\r\n\t},\r\n\texpandOpen: {\r\n\t\ttransform: 'rotate(180deg)',\r\n\t},\r\n\tavatar: {\r\n\t\tbackgroundColor: red[500],\r\n\t},\r\n\tcontexClass: {\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: '60px',\r\n\t},\r\n\timageClasses: {\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: '70px',\r\n\t},\r\n\tcontexClassDescription: {\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: '40px',\r\n\t},\r\n\tcardContentClass: {\r\n\t\tposition: 'relative',\r\n\t},\r\n}));\r\n\r\nconst CardTemperature = ({\r\n\ttemp,\r\n\tpressure,\r\n\tsunrise,\r\n\tsunset,\r\n\tdescription,\r\n\twind,\r\n\tfeelslike,\r\n\tcondition,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\t// The weatherConditions function is used to determine the background color in the red spectrum\r\n\tconst weatherConditions = (temp) => {\r\n\t\tlet highColor = 0;\r\n\t\tlet lowColor = 0;\r\n\t\t// let bg = null;\r\n\r\n\t\t// logic if 12 represent 0 , 46 represent 1\r\n\t\tif (temp > 12) {\r\n\t\t\thighColor = Math.ceil((1 - (temp - 12) / 34) * 255);\r\n\t\t\treturn `linear-gradient(to top, rgb(255,${highColor},0), rgb(255,${lowColor},0))`;\r\n\t\t} else if (temp <= 12) {\r\n\t\t\t// logic if -20 represent 0 , 12 represent 1\r\n\t\t\thighColor = Math.ceil((1 - (temp + 20) / 32) * 255);\r\n\t\t\tlowColor = highColor - 150;\r\n\t\t\treturn `linear-gradient(to top, rgb(0,${highColor},255), rgb(0,${lowColor},255))`;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardHeader\r\n\t\t\t\tavatar={\r\n\t\t\t\t\t<Avatar aria-label='recipe' className={classes.avatar}>\r\n\t\t\t\t\t\tT\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t}\r\n\t\t\t\ttitle={`${moment().format('MMM D YYYY')}`}\r\n\t\t\t\tsubheader=''\r\n\t\t\t/>\r\n\t\t\t<CardContent\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackground: weatherConditions(temp),\r\n\t\t\t\t\tcolor: '#ffffff',\r\n\t\t\t\t}}\r\n\t\t\t\tclassName='card-content-class'\r\n\t\t\t>\r\n\t\t\t\t<div className='glass-container'>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant='body2'\r\n\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\tclassName={classes.contexClass}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{temp} &#8451;\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant='body1'\r\n\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\tclassName={classes.contexClassDescription}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{description.toUpperCase()}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tvariant='body2'\r\n\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\tclassName={classes.imageClasses}\r\n\t\t\t\t>\r\n\t\t\t\t\t<IconWeather condition={condition} />\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<div className='glass-container temperature-description'>\r\n\t\t\t\t\t<Typography variant='body2' component='p'>\r\n\t\t\t\t\t\tAtmospheric pressure: {pressure} hPa\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body2' component='p'>\r\n\t\t\t\t\t\tWind speed: {wind} m/s\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body2' component='p'>\r\n\t\t\t\t\t\tFeels Like: {feelslike} &#8451;\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body2' component='p'>\r\n\t\t\t\t\t\t{condition}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions disableSpacing></CardActions>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default CardTemperature;\r\n","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass LocationMap extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcenter: {\r\n\t\t\t\tlat: 59.95,\r\n\t\t\t\tlng: 30.33,\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tcenter: {\r\n\t\t\t\tlat: this.props.lat,\r\n\t\t\t\tlng: this.props.lng,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ height: '700px', width: '100%' }}>\r\n\t\t\t\t<GoogleMapReact\r\n\t\t\t\t\t// bootstrapURLKeys={{ key: 'AIzaSyCZSY4AW-l1ZkR828vnBpf3F3j9fhe7g6A' }}\r\n\t\t\t\t\tbootstrapURLKeys={{ key: 'AIzaSyBg265-Ljsh1QF2o33YHECZF8LGszG-bzk' }}\r\n\t\t\t\t\tdefaultCenter={this.state.center}\r\n\t\t\t\t\tdefaultZoom={8}\r\n\t\t\t\t>\r\n\t\t\t\t\t<AnyReactComponent lat={59.955413} lng={30.337844} text='My Marker' />\r\n\t\t\t\t</GoogleMapReact>\r\n\t\t\t</div>\r\n\t\t\t// <div>ppp</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default LocationMap;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport CardTemperature from './carditem/CardTemperature';\r\nimport LocationMap from './carditem/LocationMap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tweatherClass: {\r\n\t\tmargin: 40,\r\n\t},\r\n\tweatherClassText: {\r\n\t\ttextShadow: '0 3px 10px rgba(0,0,0,1)',\r\n\t},\r\n}));\r\n\r\nconst WeatherCard = ({ item }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Grid item sm={12} className={classes.weatherClass}>\r\n\t\t\t<Typography\r\n\t\t\t\tvariant='h5'\r\n\t\t\t\tcomponent='p'\r\n\t\t\t\tclassName={classes.weatherClassText}\r\n\t\t\t>\r\n\t\t\t\tCity : {item.name}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography\r\n\t\t\t\tvariant='h5'\r\n\t\t\t\tcomponent='p'\r\n\t\t\t\tclassName={classes.weatherClassText}\r\n\t\t\t>\r\n\t\t\t\tCountry : {item.sys.country}\r\n\t\t\t</Typography>\r\n\t\t\t<Box component='span' m={1}>\r\n\t\t\t\t<CardTemperature\r\n\t\t\t\t\ttemp={item.main.temp}\r\n\t\t\t\t\tpressure={item.main.pressure}\r\n\t\t\t\t\tsunrise={item.sys.sunrise}\r\n\t\t\t\t\tsunset={item.sys.sunset}\r\n\t\t\t\t\tdescription={item.weather[0].description}\r\n\t\t\t\t\twind={item.wind.speed}\r\n\t\t\t\t\tfeelslike={item.main.feels_like}\r\n\t\t\t\t\tcondition={item.weather[0].main}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\t\t\t<Box className='geo-location-container'>\r\n\t\t\t\t<Typography variant='body1' component='p' className='geo-location-text'>\r\n\t\t\t\t\tCity geo location on google map\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<LocationMap lng={item.coord.lon} lat={item.coord.lat} />\r\n\t\t\t</Box>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getWeather } from '../../redux/actions/weather';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport WeatherCard from './wetherEngine/WeatherCard';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\twrongCityName: {\r\n\t\tmarginTop: '200px',\r\n\t\tcolor: '#e32b44',\r\n\t},\r\n\tforWetherEngine: {\r\n\t\tborder: '1px solid black',\r\n\t},\r\n}));\r\n\r\nconst WetherEngine = ({ city }) => {\r\n\tconst wether = useSelector((state) => state.weather);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getWeather(city));\r\n\t}, [city, dispatch]);\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} container justify='center'>\r\n\t\t\t{wether.error ? (\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\tclassName={classes.wrongCityName}\r\n\t\t\t\t>\r\n\t\t\t\t\tWrong city name entered\r\n\t\t\t\t</Typography>\r\n\t\t\t) : wether.loading ? (\r\n\t\t\t\t<Typography variant='h5' component='p'>\r\n\t\t\t\t\tLoading...\r\n\t\t\t\t</Typography>\r\n\t\t\t) : (\r\n\t\t\t\t<WeatherCard item={wether.item} />\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default WetherEngine;\r\n","import {\r\n\tFETCH_WEATHERAPI_REQUEST,\r\n\tFETCH_WEATHERAPI_SUCCESS,\r\n\tFETCH_WEATHERAPI_FAILURE,\r\n} from '../constants/actionTypes';\r\nimport WeatherAPI from '../../api/index';\r\n\r\nexport const getWeather = (city) => async (dispatch) => {\r\n\tdispatch({ type: FETCH_WEATHERAPI_REQUEST });\r\n\ttry {\r\n\t\tconst { data } = await WeatherAPI.fetchAPI(city);\r\n\t\tdispatch({ type: FETCH_WEATHERAPI_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: FETCH_WEATHERAPI_FAILURE, error: error });\r\n\t}\r\n};\r\n","const countriesArray = [\r\n\t{\r\n\t\tid: 0,\r\n\t\tcountry: 'Serbia',\r\n\t\timg: 'serbia.png',\r\n\t\tcities: ['Belgrade'],\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\tcountry: 'Australia',\r\n\t\timg: 'australia.png',\r\n\t\tcities: ['Sydney', 'Perth', 'Brisbane', 'Melbourne', 'Adelaide'],\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tcountry: 'China',\r\n\t\timg: 'china.png',\r\n\t\tcities: [\r\n\t\t\t'Beijing',\r\n\t\t\t'Macau',\r\n\t\t\t'Shanghai',\r\n\t\t\t'Chongqing',\r\n\t\t\t'Tianjin',\r\n\t\t\t'Anqing',\r\n\t\t\t'Bengbu',\r\n\t\t\t'Bozhou',\r\n\t\t\t'Chaohu',\r\n\t\t\t'Huaibei',\r\n\t\t\t'Huangshan',\r\n\t\t\t'Wuhu',\r\n\t\t\t'Dingxi',\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tcountry: 'Russia',\r\n\t\timg: 'russia.png',\r\n\t\tcities: [\r\n\t\t\t'Moscow',\r\n\t\t\t'Saint Petersburg',\r\n\t\t\t'Kazan',\r\n\t\t\t'Novosibirsk',\r\n\t\t\t'Yekaterinburg',\r\n\t\t\t'Kazan',\r\n\t\t\t'Nizhny Novgorod',\r\n\t\t\t'Samara',\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tcountry: 'UK',\r\n\t\timg: 'uk.png',\r\n\t\tcities: [\r\n\t\t\t'London',\r\n\t\t\t'Manchester',\r\n\t\t\t'Birmingham',\r\n\t\t\t'Bristol',\r\n\t\t\t'Cambridge',\r\n\t\t\t'Canterbury',\r\n\t\t\t'Cardiff',\r\n\t\t\t'Chester',\r\n\t\t\t'Derby',\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\tcountry: 'USA',\r\n\t\timg: 'usa.png',\r\n\t\tcities: [\r\n\t\t\t'New York',\r\n\t\t\t'Los Angeles',\r\n\t\t\t'Chicago',\r\n\t\t\t'Phoenix',\r\n\t\t\t'Dallas',\r\n\t\t\t'Washington',\r\n\t\t\t'Boston',\r\n\t\t\t'Oklahoma City',\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\tcountry: 'Germany',\r\n\t\timg: 'germany.png',\r\n\t\tcities: [\r\n\t\t\t'Berlin',\r\n\t\t\t'Hamburg',\r\n\t\t\t'Munich',\r\n\t\t\t'Cologne',\r\n\t\t\t'Stuttgart',\r\n\t\t\t'Düsseldorf',\r\n\t\t\t'Dortmund',\r\n\t\t\t'Remscheid',\r\n\t\t\t'Kaiserslautern',\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tid: 7,\r\n\t\tcountry: 'France',\r\n\t\timg: 'france.png',\r\n\t\tcities: [\r\n\t\t\t'Paris',\r\n\t\t\t'Marseille',\r\n\t\t\t'Lyon',\r\n\t\t\t'Lille',\r\n\t\t\t'Strasbourg',\r\n\t\t\t'Nantes',\r\n\t\t\t'Toulouse',\r\n\t\t\t'Le Havre',\r\n\t\t\t'Dijon',\r\n\t\t],\r\n\t},\r\n];\r\n\r\nexport default countriesArray;\r\n","export default __webpack_public_path__ + \"static/media/maxresdefault.7602782f.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport {\r\n\tGrid,\r\n\tTypography,\r\n\tFormControl,\r\n\tSelect,\r\n\tInputLabel,\r\n\tMenuItem,\r\n\tLink,\r\n\tTextField,\r\n\tBox,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport WetherEngine from './weatherLogic/WetherEngine';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getCountry } from '../redux/actions/countries';\r\nimport countriesArray from './countries/countriesArray';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport weatherPics from '../img/maxresdefault.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tbutton: {\r\n\t\tdisplay: 'block',\r\n\t\tmarginTop: theme.spacing(4),\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(4),\r\n\t\tminWidth: 120,\r\n\t},\r\n\timageWeather: {\r\n\t\twidth: '70%',\r\n\t},\r\n\timageWeatherContainer: {\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tmarginForCityNameInput: {\r\n\t\tmargin: theme.spacing(4),\r\n\t},\r\n\tformCountry: {\r\n\t\tmarginBottom: '100px',\r\n\t},\r\n\titemCountryClass: {\r\n\t\tmarginLeft: '10px',\r\n\t},\r\n\tlinkClass: {\r\n\t\toverflow: 'hidden',\r\n\t},\r\n}));\r\n\r\nconst SelectCountry = (props) => {\r\n\tconst selectCities = useSelector((state) => state.country);\r\n\tconst dispatch = useDispatch();\r\n\tconst classes = useStyles();\r\n\tconst [countryId, setCountryId] = useState(0);\r\n\tconst [city, setCity] = useState('');\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [openCity, setOpenCity] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getCountry(countryId));\r\n\t}, [countryId]);\r\n\r\n\tconst handleCountry = (e) => {\r\n\t\tsetCountryId((prevState) => {\r\n\t\t\treturn (prevState = e.target.value);\r\n\t\t});\r\n\t\tsetCity('');\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleCloseCity = () => {\r\n\t\tsetOpenCity(false);\r\n\t};\r\n\r\n\tconst handleOpenCity = () => {\r\n\t\tsetOpenCity(true);\r\n\t};\r\n\r\n\tconst handleCity = (e) => {\r\n\t\tsetCity((prevState) => {\r\n\t\t\treturn (prevState = e.target.value);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<Grid item xs={12} className={classes.linkClass}>\r\n\t\t\t\t<Box m={4}>\r\n\t\t\t\t\t<Typography variant='h4' component='h4' color='primary'>\r\n\t\t\t\t\t\tAPI from<span>&nbsp;</span>\r\n\t\t\t\t\t\t<Link href='https://openweathermap.org'>\r\n\t\t\t\t\t\t\thttps://openweathermap.org\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='h5' component='p' color='primary'>\r\n\t\t\t\t\t\tweather API\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\txs={12}\r\n\t\t\t\tclassName='wether-pics'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundImage: `url(\r\n\t\t\t\t\t\t\t${weatherPics}\r\n\t\t\t\t\t\t)`,\r\n\t\t\t\t}}\r\n\t\t\t></Grid>\r\n\t\t\t<Grid item sm={12} className={classes.formCountry}>\r\n\t\t\t\t<Typography variant='h5' component='h5' color='primary'>\r\n\t\t\t\t\tChoose a country\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<FormControl className={classes.formControl} color='primary'>\r\n\t\t\t\t\t\t<InputLabel id='demo-controlled-open-select-label'>\r\n\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tlabelId='demo-controlled-open-select-label'\r\n\t\t\t\t\t\t\tid='demo-controlled-open-select'\r\n\t\t\t\t\t\t\topen={open}\r\n\t\t\t\t\t\t\tvalue={countryId}\r\n\t\t\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\t\t\tonChange={handleCountry}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{countriesArray.map((item) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={`${item.id}`} key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + `/flags/${item.img}`}\r\n\t\t\t\t\t\t\t\t\t\t\talt='country'\r\n\t\t\t\t\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.itemCountryClass}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.country}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t{!selectCities.cities ? (\r\n\t\t\t\t\t\t<p>Load...</p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t<InputLabel id='demo-controlled-open-select-label'>\r\n\t\t\t\t\t\t\t\tCity\r\n\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabelId='demo-controlled-open-select-label'\r\n\t\t\t\t\t\t\t\tid='demo-controlled-open-select'\r\n\t\t\t\t\t\t\t\topen={openCity}\r\n\t\t\t\t\t\t\t\tvalue={city}\r\n\t\t\t\t\t\t\t\tonClose={handleCloseCity}\r\n\t\t\t\t\t\t\t\tonOpen={handleOpenCity}\r\n\t\t\t\t\t\t\t\tonChange={handleCity}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{selectCities.cities.map((city, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={`${city}`} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<LocationOnIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={classes.itemCountryClass}>{city}</span>\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tclassName={classes.marginForCityNameInput}\r\n\t\t\t\t\t\t\tid='outlined-required'\r\n\t\t\t\t\t\t\tlabel='Enter city name'\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\tvalue={city}\r\n\t\t\t\t\t\t\tonChange={handleCity}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</form>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item sm={12} container className={classes.forWetherEngine}>\r\n\t\t\t\t{city.length > 0 ? <WetherEngine city={city} /> : <p></p>}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default SelectCountry;\r\n","import { GET_COUNTRY } from '../constants/actionTypes';\r\nimport countriesArray from '../../components/countries/countriesArray';\r\n\r\nexport const getCountry = (countryId) => {\r\n\treturn {\r\n\t\ttype: GET_COUNTRY,\r\n\t\tpayload: countriesArray[countryId],\r\n\t};\r\n};\r\n","import React, { useState } from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme1 = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: 'light',\r\n\t},\r\n});\r\n\r\nconst theme2 = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: 'dark',\r\n\t},\r\n});\r\n\r\nconst Theme = (props) => {\r\n\tconst { children, darkMode } = props;\r\n\tconst defaultTheme = darkMode ? theme2 : theme1;\r\n\treturn <ThemeProvider theme={defaultTheme}>{children}</ThemeProvider>;\r\n};\r\n\r\nexport const withTheme = (Component) => {\r\n\treturn (props) => {\r\n\t\tconst [darkMode, setDarkMode] = useState(false);\r\n\t\treturn (\r\n\t\t\t<Theme darkMode={darkMode}>\r\n\t\t\t\t<Component {...props} darkMode={darkMode} setDarkMode={setDarkMode} />\r\n\t\t\t</Theme>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default withTheme;\r\n","import React from 'react';\nimport { CssBaseline, Container } from '@material-ui/core';\nimport SelectCountry from './components/SelectCountry';\nimport withTheme from './components/theme/Theme';\n\nfunction App(props) {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<CssBaseline />\n\t\t\t<Container maxWidth='md'>\n\t\t\t\t<SelectCountry {...props} />\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default withTheme(App);\n","import {\r\n\tFETCH_WEATHERAPI_REQUEST,\r\n\tFETCH_WEATHERAPI_SUCCESS,\r\n\tFETCH_WEATHERAPI_FAILURE,\r\n} from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n\titem: {},\r\n\tloading: true,\r\n\terror: null,\r\n};\r\n\r\nexport default function weatherReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_WEATHERAPI_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t\terror: null,\r\n\t\t\t};\r\n\t\tcase FETCH_WEATHERAPI_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: null,\r\n\t\t\t\titem: action.payload,\r\n\t\t\t};\r\n\t\tcase FETCH_WEATHERAPI_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.error,\r\n\t\t\t\titem: {},\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { GET_COUNTRY } from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n\titems: [],\r\n};\r\n\r\nexport default function countryReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_COUNTRY:\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport weatherReducer from './weather';\r\nimport countryReducer from './countries';\r\n\r\nconst rootReducer = combineReducers({\r\n\tweather: weatherReducer,\r\n\tcountry: countryReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from '../reduers/rootReducer';\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\r\n\r\nconst store = createStore(rootReducer, composedEnhancer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport './style/index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}