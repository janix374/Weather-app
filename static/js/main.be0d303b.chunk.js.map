{"version":3,"sources":["redux/constants/actionTypes.js","api/http-common.js","api/index.js","components/weatherLogic/IconWeather.js","components/weatherLogic/CardTemperature.js","components/weatherLogic/WeatherCard.js","components/weatherLogic/WetherEngine.js","redux/actions/weather.js","components/dbCountry.js","components/SelectCountry.js","redux/actions/countries.js","App.js","redux/reduers/weather.js","redux/reduers/countries.js","redux/reduers/rootReducer.js","redux/store/store.js","index.js"],"names":["FETCH_WEATHERAPI_REQUEST","FETCH_WEATHERAPI_SUCCESS","FETCH_WEATHERAPI_FAILURE","GET_COUNTRY","axios","create","baseURL","headers","city","http","get","process","IconWeather","props","icon","condition","src","alt","useStyles","makeStyles","theme","root","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","avatar","backgroundColor","red","contexClass","textAlign","fontSize","imageClasses","margin","contexClassDescription","CardTemperature","temp","pressure","sunrise","sunset","description","wind","feelslike","classes","Card","className","CardHeader","Avatar","aria-label","action","IconButton","title","moment","format","subheader","CardContent","style","background","highColor","lowColor","Math","ceil","weatherConditions","color","Typography","variant","component","toUpperCase","unix","CardActions","disableSpacing","weatherClass","WeatherCard","item","Grid","sm","name","sys","country","Box","m","coord","lon","lat","main","weather","speed","feels_like","WetherEngine","wether","useSelector","state","dispatch","useDispatch","useEffect","a","type","WeatherAPI","fetchAPI","data","payload","error","getWeather","xs","container","justify","loading","countriesArray","id","cities","button","display","marginTop","spacing","formControl","minWidth","SelectCountry","selectCities","useState","countryId","setCountryId","setCity","open","setOpen","openCity","setOpenCity","getCountry","FormControl","InputLabel","Select","labelId","value","onClose","onOpen","onChange","e","prevState","target","map","MenuItem","index","length","App","CssBaseline","Container","maxWidth","initialState","items","rootReducer","combineReducers","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"qRAAaA,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAA2B,2BAE3BC,EAAc,c,wBCFZC,E,OAAAA,EAAMC,OAAO,CAC3BC,QAAS,kDACTC,QAAS,CACR,eAAgB,sBCKH,M,wFALd,SAASC,GACR,OAAOC,EAAKC,IAAL,kCAJKC,mCAIL,cAA+CH,Q,sHC+CzCI,EAnDK,SAACC,GACpB,IAAIC,EAAO,GACX,OAAQD,EAAME,WACb,IAAK,SACJD,EAAI,+BACJ,MACD,IAAK,QACJA,EAAI,8BACJ,MACD,IAAK,OACJA,EAAI,sBACJ,MACD,IAAK,OACJA,EAAI,sBACJ,MACD,IAAK,MACJA,EAAI,qBACJ,MACD,IAAK,UACJA,EAAI,yBACJ,MACD,IAAK,OACJA,EAAI,sBACJ,MACD,IAAK,OACJA,EAAI,qBACJ,MACD,IAAK,OACJA,EAAI,sBACJ,MACD,IAAK,OACJA,EAAI,sBACJ,MACD,IAAK,UACJA,EAAI,yBACJ,MACD,IAAK,eACJA,EAAI,qCACJ,MACD,QACCA,EAAI,qBAIN,OACC,mCACC,qBAAKE,IAAKF,EAAMG,IAAI,yBChCjBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxCC,KAAM,GAGNC,MAAO,CACNC,OAAQ,EACRC,WAAY,UAEbC,OAAQ,CACPC,UAAW,eACXC,WAAY,OACZC,WAAYR,EAAMS,YAAYxB,OAAO,YAAa,CACjDyB,SAAUV,EAAMS,YAAYC,SAASC,YAGvCC,WAAY,CACXN,UAAW,kBAEZO,OAAQ,CACPC,gBAAiBC,IAAI,MAEtBC,YAAa,CACZC,UAAW,SACXC,SAAU,QAEXC,aAAc,CACbF,UAAW,SACXG,OAAQ,QAETC,uBAAwB,CACvBJ,UAAW,SACXC,SAAU,YAkGGI,EA9FS,SAAC,GASlB,IARNC,EAQK,EARLA,KACAC,EAOK,EAPLA,SACAC,EAMK,EANLA,QACAC,EAKK,EALLA,OACAC,EAIK,EAJLA,YACAC,EAGK,EAHLA,KACAC,EAEK,EAFLA,UACAlC,EACK,EADLA,UAEMmC,EAAUhC,IAmBhB,OACC,eAACiC,EAAA,EAAD,CAAMC,UAAWF,EAAQ7B,KAAzB,UACC,cAACgC,EAAA,EAAD,CACCpB,OACC,cAACqB,EAAA,EAAD,CAAQC,aAAW,SAASH,UAAWF,EAAQjB,OAA/C,eAIDuB,OACC,cAACC,EAAA,EAAD,CAAYF,aAAW,WAAvB,SACC,cAAC,IAAD,MAGFG,MAAK,UAAKC,MAASC,OAAO,eAC1BC,UAAU,KAEX,eAACC,EAAA,EAAD,CACCC,MAAO,CACNC,WAnCsB,SAACrB,GAC1B,IAAIsB,EAAY,EACZC,EAAW,EAIf,OAAIvB,EAAO,IACVsB,EAAYE,KAAKC,KAA8B,KAAxB,GAAKzB,EAAO,IAAM,KACnC,mCAAN,OAA0CsB,EAA1C,wBAAmEC,EAAnE,SACUvB,GAAQ,IAGlBuB,GADAD,EAAYE,KAAKC,KAA8B,KAAxB,GAAKzB,EAAO,IAAM,MAClB,IACjB,iCAAN,OAAwCsB,EAAxC,wBAAiEC,EAAjE,gBAJM,EA0BQG,CAAkB1B,GAC9B2B,MAAO,WAHT,UAMC,eAACC,EAAA,EAAD,CACCC,QAAQ,QACRC,UAAU,IACVrB,UAAWF,EAAQd,YAHpB,UAKEO,EALF,aAOA,cAAC4B,EAAA,EAAD,CACCC,QAAQ,QACRC,UAAU,IACVrB,UAAWF,EAAQT,uBAHpB,SAKEM,EAAY2B,gBAEd,cAACH,EAAA,EAAD,CACCC,QAAQ,QACRC,UAAU,IACVrB,UAAWF,EAAQX,aAHpB,SAKC,cAAC,EAAD,CAAaxB,UAAWA,MAEzB,eAACwD,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,IAAtC,mCACwB7B,EADxB,UAGA,eAAC2B,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,IAAtC,yBACczB,EADd,UAGA,eAACuB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,IAAtC,yBACcxB,EADd,aAGA,eAACsB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,IAAtC,2BACgBd,IAAOgB,KAAK9B,GAASe,OAAO,YAE5C,eAACW,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,IAAtC,0BACed,IAAOgB,KAAK7B,GAAQc,OAAO,YAE1C,4BAAI7C,OAEL,cAAC6D,EAAA,EAAD,CAAaC,gBAAc,QCvIxB3D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxC0D,aAAc,CACbtC,OAAQ,QAuCKuC,EAnCK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB9B,EAAUhC,IAEhB,OACC,eAAC+D,EAAA,EAAD,CAAMD,MAAI,EAACE,GAAI,GAAI9B,UAAWF,EAAQ4B,aAAtC,UACC,eAACP,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,oBACSO,EAAKG,QAEd,eAACZ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,uBACYO,EAAKI,IAAIC,WAErB,eAACC,EAAA,EAAD,CAAKb,UAAU,OAAOc,EAAG,EAAzB,UACC,eAAChB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,IAAtC,4CACiCO,EAAKQ,MAAMC,OAE5C,eAAClB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,IAAtC,2CACgCO,EAAKQ,MAAME,UAG5C,cAACJ,EAAA,EAAD,CAAKb,UAAU,OAAOc,EAAG,EAAzB,SACC,cAAC,EAAD,CACC5C,KAAMqC,EAAKW,KAAKhD,KAChBC,SAAUoC,EAAKW,KAAK/C,SACpBC,QAASmC,EAAKI,IAAIvC,QAClBC,OAAQkC,EAAKI,IAAItC,OACjBC,YAAaiC,EAAKY,QAAQ,GAAG7C,YAC7BC,KAAMgC,EAAKhC,KAAK6C,MAChB5C,UAAW+B,EAAKW,KAAKG,WACrB/E,UAAWiE,EAAKY,QAAQ,GAAGD,aCRjBI,EAzBM,SAAC,GAAc,IAAZvF,EAAW,EAAXA,KACjBwF,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMN,WACtCO,EAAWC,cAMjB,OAJAC,qBAAU,WACTF,ECJwB,SAAC3F,GAAD,8CAAU,WAAO2F,GAAP,iBAAAG,EAAA,6DACnCH,EAAS,CAAEI,KAAMvG,IADkB,kBAGXwG,EAAWC,SAASjG,GAHT,gBAG1BkG,EAH0B,EAG1BA,KACRP,EAAS,CAAEI,KAAMtG,EAA0B0G,QAASD,IAJlB,gDAMlCP,EAAS,CAAEI,KAAMrG,EAA0B0G,MAAM,EAAD,KANd,yDAAV,sDDIfC,CAAWrG,MAClB,CAACA,EAAM2F,IAGT,cAAClB,EAAA,EAAD,CAAMD,MAAI,EAAC8B,GAAI,GAAIC,WAAS,EAACC,QAAQ,SAArC,SACEhB,EAAOY,MACP,cAACrC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,kCAGGuB,EAAOiB,QACV,cAAC1C,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,wBAIA,cAAC,EAAD,CAAaO,KAAMgB,EAAOhB,UEQfkC,EAjCQ,CACtB,CACCC,GAAI,EACJ9B,QAAS,SACT+B,OAAQ,CAAC,aAEV,CACCD,GAAI,EACJ9B,QAAS,KACT+B,OAAQ,CAAC,SAAU,eAEpB,CACCD,GAAI,EACJ9B,QAAS,YACT+B,OAAQ,CAAC,SAAU,QAAS,aAE7B,CACCD,GAAI,EACJ9B,QAAS,QACT+B,OAAQ,CAAC,UAAW,QAAS,aAE9B,CACCD,GAAI,EACJ9B,QAAS,SACT+B,OAAQ,CAAC,SAAU,mBAAoB,UAExC,CACCD,GAAI,EACJ9B,QAAS,MACT+B,OAAQ,CAAC,WAAY,cAAe,UAAW,aCd3ClG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxCiG,OAAQ,CACPC,QAAS,QACTC,UAAWnG,EAAMoG,QAAQ,IAE1BC,YAAa,CACZjF,OAAQpB,EAAMoG,QAAQ,GACtBE,SAAU,SAsHGC,EAlHO,WACrB,IAAMC,EAAe3B,aAAY,SAACC,GAAD,OAAWA,EAAMb,WAC5Cc,EAAWC,cAEXlD,EAAUhC,IAJW,EAKO2G,mBAAS,GALhB,mBAKpBC,EALoB,KAKTC,EALS,OAMHF,mBAAS,IANN,mBAMpBrH,EANoB,KAMdwH,EANc,OAOHH,oBAAS,GAPN,mBAOpBI,EAPoB,KAOdC,EAPc,OAQKL,oBAAS,GARd,mBAQpBM,EARoB,KAQVC,EARU,KAU3B/B,qBAAU,WACTF,EClCwB,SAAC2B,GAC1B,MAAO,CACNvB,KAAMpG,EACNwG,QAASO,EAAeY,ID+BfO,CAAWP,MAClB,CAACA,IA+BJ,OACC,eAAC7C,EAAA,EAAD,CAAM8B,WAAS,EAAf,UACC,eAAC9B,EAAA,EAAD,CAAMD,MAAI,EAAC8B,GAAI,GAAf,UACC,cAACvC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,iDAGA,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,8BAGA,iCACC,eAAC6D,EAAA,EAAD,CAAalF,UAAWF,EAAQuE,YAAhC,UACC,cAACc,EAAA,EAAD,CAAYpB,GAAG,oCAAf,qBAGA,cAACqB,EAAA,EAAD,CACCC,QAAQ,oCACRtB,GAAG,8BACHc,KAAMA,EACNS,MAAOZ,EACPa,QAzCc,WACnBT,GAAQ,IAyCHU,OAtCa,WAClBV,GAAQ,IAsCHW,SAlDgB,SAACC,GACtBf,GAAa,SAACgB,GACb,OAAoBD,EAAEE,OAAON,SAE9BV,EAAQ,KAuCJ,SASEd,EAAe+B,KAAI,SAACjE,GACpB,OACC,cAACkE,EAAA,EAAD,CAAUR,MAAK,UAAK1D,EAAKmC,IAAzB,SACEnC,EAAKK,SAD6BL,EAAKmC,YAO3CS,EAAaR,OAGd,eAACkB,EAAA,EAAD,CAAalF,UAAWF,EAAQuE,YAAhC,UACC,cAACc,EAAA,EAAD,CAAYpB,GAAG,oCAAf,kBAGA,cAACqB,EAAA,EAAD,CACCC,QAAQ,oCACRtB,GAAG,8BACHc,KAAME,EACNO,MAAOlI,EACPmI,QA1DiB,WACvBP,GAAY,IA0DNQ,OAvDgB,WACtBR,GAAY,IAuDNS,SApDY,SAACC,GACnBd,GAAQ,SAACe,GACR,OAAoBD,EAAEE,OAAON,UA2CzB,SASEd,EAAaR,OAAO6B,KAAI,SAACzI,EAAM2I,GAC/B,OACC,cAACD,EAAA,EAAD,CAAUR,MAAK,UAAKlI,GAApB,SACEA,GAD+B2I,WAjBrC,8CA2BH,cAAClE,EAAA,EAAD,CAAMD,MAAI,EAAC8B,GAAI,GAAIC,WAAS,EAA5B,SACEvG,EAAK4I,OAAS,EACd,cAAC,EAAD,CAAc5I,KAAMA,IAEpB,6DEtHU6I,MAXf,WACC,OACC,sBAAKjG,UAAU,MAAf,UACC,cAACkG,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACC,cAAC,EAAD,U,kCCHEC,GAAe,CACpBzE,KAAM,GACNiC,SAAS,EACTL,MAAO,MCPR,IAAM6C,GAAe,CACpBC,MAAO,ICER,IAKeC,GALKC,0BAAgB,CACnChE,QFMc,WAAuD,IAA/BM,EAA8B,uDAAtBuD,GAAcjG,EAAQ,uCACpE,OAAQA,EAAO+C,MACd,KAAKvG,EACJ,OAAO,6BACHkG,GADJ,IAECe,SAAS,EACTL,MAAO,OAET,KAAK3G,EACJ,OAAO,6BACHiG,GADJ,IAECe,SAAS,EACTL,MAAO,KACP5B,KAAMxB,EAAOmD,UAEf,KAAKzG,EACJ,OAAO,6BACHgG,GADJ,IAECe,SAAS,EACTL,MAAOpD,EAAOoD,MACd5B,KAAM,KAER,QACC,OAAOkB,IE5BTb,QDDc,WAAuD,IAA/Ba,EAA8B,uDAAtBuD,GAAcjG,EAAQ,uCACpE,OAAQA,EAAO+C,MACd,KAAKpG,EACJ,OAAOqD,EAAOmD,QACf,QACC,OAAOT,MELJ2D,GAAmBC,+BAAoBC,0BAAgBC,MAI9CC,GAFDC,sBAAYP,GAAaE,ICDvCM,IAASC,OACR,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACC,cAAC,EAAD,MAEDI,SAASC,eAAe,U","file":"static/js/main.be0d303b.chunk.js","sourcesContent":["export const FETCH_WEATHERAPI_REQUEST = 'FETCH_WEATHERAPI_REQUEST';\r\nexport const FETCH_WEATHERAPI_SUCCESS = 'FETCH_WEATHERAPI_SUCCESS';\r\nexport const FETCH_WEATHERAPI_FAILURE = 'FETCH_WEATHERAPI_FAILURE';\r\n\r\nexport const GET_COUNTRY = 'GET_COUNTRY';\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n\tbaseURL: 'https://api.openweathermap.org/data/2.5/weather',\r\n\theaders: {\r\n\t\t'Content-type': 'application/json',\r\n\t},\r\n});\r\n","import http from './http-common';\r\n\r\nconst apiId = process.env.REACT_APP_API_KEY;\r\n\r\nclass WeatherAPI {\r\n\tfetchAPI(city) {\r\n\t\treturn http.get(`/?uk&units=metric&appid=${apiId}&q=${city}`);\r\n\t}\r\n}\r\n\r\nexport default new WeatherAPI();\r\n","import React from 'react';\r\n\r\nconst IconWeather = (props) => {\r\n\tlet icon = '';\r\n\tswitch (props.condition) {\r\n\t\tcase 'Clouds':\r\n\t\t\ticon = `./image/Mostly Cloudy-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Clear':\r\n\t\t\ticon = `./image/Mostly Sunny-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Haze':\r\n\t\t\ticon = `./image/Haze-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Hail':\r\n\t\t\ticon = `./image/Hail-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Fog':\r\n\t\t\ticon = `./image/Fog-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Tornado':\r\n\t\t\ticon = `./image/Tornado-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Dust':\r\n\t\t\ticon = `./image/Dust-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Mist':\r\n\t\t\ticon = `./image/Fog-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Snow':\r\n\t\t\ticon = `./image/Snow-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Rain':\r\n\t\t\ticon = `./image/Rain-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Drizzle':\r\n\t\t\ticon = `./image/Drizzle-2x.png`;\r\n\t\t\tbreak;\r\n\t\tcase 'Thunderstorm':\r\n\t\t\ticon = `./image/Severe Thunderstorm-2x.png`;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\ticon = `./image/Fog-2x.png`;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img src={icon} alt='weather condition' />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default IconWeather;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport {\r\n\tCard,\r\n\tCardHeader,\r\n\tTypography,\r\n\tIconButton,\r\n\tAvatar,\r\n\tCardContent,\r\n\tCardActions,\r\n} from '@material-ui/core';\r\nimport CenterFocusWeakTwoToneIcon from '@material-ui/icons/CenterFocusWeakTwoTone';\r\nimport moment from 'moment';\r\nimport IconWeather from './IconWeather';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t// maxWidth: 345,\r\n\t},\r\n\tmedia: {\r\n\t\theight: 0,\r\n\t\tpaddingTop: '56.25%', // 16:9\r\n\t},\r\n\texpand: {\r\n\t\ttransform: 'rotate(0deg)',\r\n\t\tmarginLeft: 'auto',\r\n\t\ttransition: theme.transitions.create('transform', {\r\n\t\t\tduration: theme.transitions.duration.shortest,\r\n\t\t}),\r\n\t},\r\n\texpandOpen: {\r\n\t\ttransform: 'rotate(180deg)',\r\n\t},\r\n\tavatar: {\r\n\t\tbackgroundColor: red[500],\r\n\t},\r\n\tcontexClass: {\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: '60px',\r\n\t},\r\n\timageClasses: {\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: '70px',\r\n\t},\r\n\tcontexClassDescription: {\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: '40px',\r\n\t},\r\n}));\r\n\r\nconst CardTemperature = ({\r\n\ttemp,\r\n\tpressure,\r\n\tsunrise,\r\n\tsunset,\r\n\tdescription,\r\n\twind,\r\n\tfeelslike,\r\n\tcondition,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\t// The weatherConditions function is used to determine the background color in the red spectrum\r\n\tconst weatherConditions = (temp) => {\r\n\t\tlet highColor = 0;\r\n\t\tlet lowColor = 0;\r\n\t\tlet bg = null;\r\n\r\n\t\t// logic if 12 represent 0 , 46 represent 1\r\n\t\tif (temp > 12) {\r\n\t\t\thighColor = Math.ceil((1 - (temp - 12) / 34) * 255);\r\n\t\t\treturn `linear-gradient(to top, rgb(255,${highColor},0), rgb(255,${lowColor},0))`;\r\n\t\t} else if (temp <= 12) {\r\n\t\t\t// logic if -20 represent 0 , 12 represent 1\r\n\t\t\thighColor = Math.ceil((1 - (temp + 20) / 32) * 255);\r\n\t\t\tlowColor = highColor - 150;\r\n\t\t\treturn `linear-gradient(to top, rgb(0,${highColor},255), rgb(0,${lowColor},255))`;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardHeader\r\n\t\t\t\tavatar={\r\n\t\t\t\t\t<Avatar aria-label='recipe' className={classes.avatar}>\r\n\t\t\t\t\t\tT\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t}\r\n\t\t\t\taction={\r\n\t\t\t\t\t<IconButton aria-label='settings'>\r\n\t\t\t\t\t\t<CenterFocusWeakTwoToneIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t}\r\n\t\t\t\ttitle={`${moment().format('MMM D YYYY')}`}\r\n\t\t\t\tsubheader=''\r\n\t\t\t/>\r\n\t\t\t<CardContent\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackground: weatherConditions(temp),\r\n\t\t\t\t\tcolor: '#ffffff',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tvariant='body2'\r\n\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\tclassName={classes.contexClass}\r\n\t\t\t\t>\r\n\t\t\t\t\t{temp} &#8451;\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tvariant='body1'\r\n\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\tclassName={classes.contexClassDescription}\r\n\t\t\t\t>\r\n\t\t\t\t\t{description.toUpperCase()}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tvariant='body2'\r\n\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\tclassName={classes.imageClasses}\r\n\t\t\t\t>\r\n\t\t\t\t\t<IconWeather condition={condition} />\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='body2' component='p'>\r\n\t\t\t\t\tAtmospheric pressure: {pressure} hPa\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='body2' component='p'>\r\n\t\t\t\t\tWind speed: {wind} m/s\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='body2' component='p'>\r\n\t\t\t\t\tFeels Like: {feelslike} &#8451;\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='body2' component='p'>\r\n\t\t\t\t\tSunrise time: {moment.unix(sunrise).format('HH:mm')}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='body2' component='p'>\r\n\t\t\t\t\tSunset time: {moment.unix(sunset).format('HH:mm')}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<p>{condition}</p>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions disableSpacing></CardActions>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default CardTemperature;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, Box } from '@material-ui/core';\r\nimport CardTemperature from './CardTemperature';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tweatherClass: {\r\n\t\tmargin: 40,\r\n\t},\r\n}));\r\n\r\nconst WeatherCard = ({ item }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Grid item sm={12} className={classes.weatherClass}>\r\n\t\t\t<Typography variant='h5' component='p'>\r\n\t\t\t\tCity : {item.name}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='h5' component='p'>\r\n\t\t\t\tCountry : {item.sys.country}\r\n\t\t\t</Typography>\r\n\t\t\t<Box component='span' m={1}>\r\n\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\tCity geo location, longitude : {item.coord.lon}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='body1' component='p'>\r\n\t\t\t\t\tCity geo location, latitude : {item.coord.lat}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box component='span' m={1}>\r\n\t\t\t\t<CardTemperature\r\n\t\t\t\t\ttemp={item.main.temp}\r\n\t\t\t\t\tpressure={item.main.pressure}\r\n\t\t\t\t\tsunrise={item.sys.sunrise}\r\n\t\t\t\t\tsunset={item.sys.sunset}\r\n\t\t\t\t\tdescription={item.weather[0].description}\r\n\t\t\t\t\twind={item.wind.speed}\r\n\t\t\t\t\tfeelslike={item.main.feels_like}\r\n\t\t\t\t\tcondition={item.weather[0].main}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getWeather } from '../../redux/actions/weather';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport WeatherCard from './WeatherCard';\r\n\r\nconst WetherEngine = ({ city }) => {\r\n\tconst wether = useSelector((state) => state.weather);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getWeather(city));\r\n\t}, [city, dispatch]);\r\n\r\n\treturn (\r\n\t\t<Grid item xs={12} container justify='center'>\r\n\t\t\t{wether.error ? (\r\n\t\t\t\t<Typography variant='h5' component='p'>\r\n\t\t\t\t\tSomething went wrong\r\n\t\t\t\t</Typography>\r\n\t\t\t) : wether.loading ? (\r\n\t\t\t\t<Typography variant='h5' component='p'>\r\n\t\t\t\t\tLoading...\r\n\t\t\t\t</Typography>\r\n\t\t\t) : (\r\n\t\t\t\t<WeatherCard item={wether.item} />\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default WetherEngine;\r\n","import {\r\n\tFETCH_WEATHERAPI_REQUEST,\r\n\tFETCH_WEATHERAPI_SUCCESS,\r\n\tFETCH_WEATHERAPI_FAILURE,\r\n} from '../constants/actionTypes';\r\nimport WeatherAPI from '../../api/index';\r\n\r\nexport const getWeather = (city) => async (dispatch) => {\r\n\tdispatch({ type: FETCH_WEATHERAPI_REQUEST });\r\n\ttry {\r\n\t\tconst { data } = await WeatherAPI.fetchAPI(city);\r\n\t\tdispatch({ type: FETCH_WEATHERAPI_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: FETCH_WEATHERAPI_FAILURE, error: error });\r\n\t}\r\n};\r\n","const countriesArray = [\r\n\t{\r\n\t\tid: 0,\r\n\t\tcountry: 'Serbia',\r\n\t\tcities: ['Belgrade'],\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\tcountry: 'UK',\r\n\t\tcities: ['London', 'Manchester'],\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tcountry: 'Australia',\r\n\t\tcities: ['Sydney', 'Perth', 'Brisbane'],\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tcountry: 'China',\r\n\t\tcities: ['Beijing', 'Macau', 'Shanghai'],\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tcountry: 'Russia',\r\n\t\tcities: ['Moscow', 'Saint Petersburg', 'Kazan'],\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\tcountry: 'USA',\r\n\t\tcities: ['New York', 'Los Angeles', 'Chicago', 'Phoenix'],\r\n\t},\r\n];\r\n\r\nexport default countriesArray;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n\tGrid,\r\n\tTypography,\r\n\tFormControl,\r\n\tSelect,\r\n\tInputLabel,\r\n\tMenuItem,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport WetherEngine from './weatherLogic/WetherEngine';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getCountry } from '../redux/actions/countries';\r\nimport countriesArray from './dbCountry';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tbutton: {\r\n\t\tdisplay: 'block',\r\n\t\tmarginTop: theme.spacing(2),\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120,\r\n\t},\r\n}));\r\n\r\nconst SelectCountry = () => {\r\n\tconst selectCities = useSelector((state) => state.country);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst classes = useStyles();\r\n\tconst [countryId, setCountryId] = useState(0);\r\n\tconst [city, setCity] = useState('');\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [openCity, setOpenCity] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getCountry(countryId));\r\n\t}, [countryId]);\r\n\r\n\tconst handleCountry = (e) => {\r\n\t\tsetCountryId((prevState) => {\r\n\t\t\treturn (prevState = e.target.value);\r\n\t\t});\r\n\t\tsetCity('');\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleCloseCity = () => {\r\n\t\tsetOpenCity(false);\r\n\t};\r\n\r\n\tconst handleOpenCity = () => {\r\n\t\tsetOpenCity(true);\r\n\t};\r\n\r\n\tconst handleCity = (e) => {\r\n\t\tsetCity((prevState) => {\r\n\t\t\treturn (prevState = e.target.value);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Typography variant='h4' component='h4'>\r\n\t\t\t\t\tAPI from https://openweathermap.org\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='h5' component='h5'>\r\n\t\t\t\t\tChoose a country\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t<InputLabel id='demo-controlled-open-select-label'>\r\n\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tlabelId='demo-controlled-open-select-label'\r\n\t\t\t\t\t\t\tid='demo-controlled-open-select'\r\n\t\t\t\t\t\t\topen={open}\r\n\t\t\t\t\t\t\tvalue={countryId}\r\n\t\t\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\t\t\tonChange={handleCountry}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{countriesArray.map((item) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={`${item.id}`} key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t{item.country}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t{!selectCities.cities ? (\r\n\t\t\t\t\t\t<p>Load...</p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t\t\t<InputLabel id='demo-controlled-open-select-label'>\r\n\t\t\t\t\t\t\t\tCity\r\n\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabelId='demo-controlled-open-select-label'\r\n\t\t\t\t\t\t\t\tid='demo-controlled-open-select'\r\n\t\t\t\t\t\t\t\topen={openCity}\r\n\t\t\t\t\t\t\t\tvalue={city}\r\n\t\t\t\t\t\t\t\tonClose={handleCloseCity}\r\n\t\t\t\t\t\t\t\tonOpen={handleOpenCity}\r\n\t\t\t\t\t\t\t\tonChange={handleCity}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{selectCities.cities.map((city, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={`${city}`} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t{city}\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</form>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t{city.length > 0 ? (\r\n\t\t\t\t\t<WetherEngine city={city} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>You must select a city</p>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default SelectCountry;\r\n","import { GET_COUNTRY } from '../constants/actionTypes';\r\nimport countriesArray from '../../components/dbCountry';\r\n\r\nexport const getCountry = (countryId) => {\r\n\treturn {\r\n\t\ttype: GET_COUNTRY,\r\n\t\tpayload: countriesArray[countryId],\r\n\t};\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { CssBaseline, Container } from '@material-ui/core';\nimport SelectCountry from './components/SelectCountry';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<CssBaseline />\n\t\t\t<Container maxWidth='md'>\n\t\t\t\t<SelectCountry />\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import {\r\n\tFETCH_WEATHERAPI_REQUEST,\r\n\tFETCH_WEATHERAPI_SUCCESS,\r\n\tFETCH_WEATHERAPI_FAILURE,\r\n} from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n\titem: {},\r\n\tloading: true,\r\n\terror: null,\r\n};\r\n\r\nexport default function weatherReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_WEATHERAPI_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t\terror: null,\r\n\t\t\t};\r\n\t\tcase FETCH_WEATHERAPI_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: null,\r\n\t\t\t\titem: action.payload,\r\n\t\t\t};\r\n\t\tcase FETCH_WEATHERAPI_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.error,\r\n\t\t\t\titem: {},\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { GET_COUNTRY } from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n\titems: [],\r\n};\r\n\r\nexport default function countryReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_COUNTRY:\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport weatherReducer from './weather';\r\nimport countryReducer from './countries';\r\n\r\nconst rootReducer = combineReducers({\r\n\tweather: weatherReducer,\r\n\tcountry: countryReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from '../reduers/rootReducer';\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\r\n\r\nconst store = createStore(rootReducer, composedEnhancer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}